#include <iostream>
#include <vector>
#include <string>
using namespace std;
string findNext(string, string);
void fibNumber(vector<string>&, string);
void printVec(vector<string>&);
int main()
{
	int n;
	string data;
	vector<string> fib(1000);
	vector<string> test;
	fib[0]="0";
	fib[1]="1";
	for(unsigned int i = 0; i < fib.size()-2; i++){
		
		fib[i+2] = (findNext(fib[i],fib[i+1]));
	}
	cin>>n;
	cin.ignore();
	while(n--){
		getline(cin,data);
		test.push_back(data);
	}
	for(unsigned int q = 0; q < test.size(); q++){
		fibNumber(fib, test[q]);
	}
	cout<<endl;
	printVec(fib);	
	system("pause");
	return 0;
}
void fibNumber(vector<string>& fib, string f){
	for(unsigned int i = 0; i < fib.size(); i++){
		if(f == fib[i]){cout<<i<<" ";}
	}
}
string findNext(string a, string b){
	string c;
	int carry = 0;
	vector<int> alpha;
	vector<int> beta;
	vector<int> sum;

	for(unsigned int i = 0; i <= a.length()-1; i++){
		int a1 = a[i] - 48;
		alpha.push_back(a1);
	}
	
	for(unsigned int k = 0; k <= b.length()-1; k++){
		int b1 = b[k] - 48;
		beta.push_back(b1);
	}

	int lim = alpha.size()-1;
	for(int i = beta.size()-1; i >= 0; i--){
		if(lim >= 0){
					int add = beta[i] + alpha[lim] + carry;
					if(carry == 1){carry = 0;}
					if(add >= 10){
						sum.push_back(add%10);
						carry = 1;
					}
					else{
						if(carry == 1){
								sum.push_back(add+carry);
								carry = 0;
						}
						else{sum.push_back(add);}
					}
		}
		else{sum.push_back(beta[i]+carry);carry = 0;}
		lim--;
		}
	if(carry == 1){sum.push_back(carry);carry = 0;}
	for(unsigned int x = 0; x < sum.size(); x++){
		char y = sum[x] + 48;
		c = y + c;
	}
	
	return c;
}
void printVec(vector<string>& fib)
{
	for(unsigned int i = 0; i < fib.size(); i++){
		cout<<i<<": "<<fib[i]<<endl;
	}
}
	
